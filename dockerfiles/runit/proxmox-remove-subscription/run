#!/bin/bash
exec 2>&1

SERVICE_NAME="proxmox-remove-subscription"
MARKER_FILE="/var/lib/proxmox-backup/.subscription-nag-disabled"
SCRIPT_LOG="/var/log/proxmox-backup/subscription-removal.log"
PROXMOXLIB="/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js"

echo "[$SERVICE_NAME] Starting subscription removal service..."

# OVERRIDE THE FILE FROM THE SOURCE - THIS IS THE FIX
if [ -f "/etc/proxmox-backup-default/pbs-post-install.sh.new" ]; then
    echo "[$SERVICE_NAME] Overriding pbs-post-install.sh with new version..." | tee -a "$SCRIPT_LOG"
    cp -f /etc/proxmox-backup-default/pbs-post-install.sh.new /etc/proxmox-backup-default/pbs-post-install.sh
    chmod +x /etc/proxmox-backup-default/pbs-post-install.sh
fi

# Create log directory and file
mkdir -p /var/log/proxmox-backup
echo "=== Starting new run at $(date) ===" >> "$SCRIPT_LOG"

echo "[$SERVICE_NAME] Waiting for proxmoxlib.js to check current state..." | tee -a "$SCRIPT_LOG"

# Wait for proxmoxlib.js to exist first
for i in $(seq 1 60); do
    if [ -f "$PROXMOXLIB" ]; then
        echo "[$SERVICE_NAME] Found proxmoxlib.js at attempt $i" | tee -a "$SCRIPT_LOG"
        break
    fi
    sleep 2
done

# Check if patch is actually applied (not just marker)
if [ -f "$PROXMOXLIB" ]; then
    if grep -q "NoMoreNagging" "$PROXMOXLIB" 2>/dev/null; then
        echo "[$SERVICE_NAME] Patch already applied (NoMoreNagging found)" | tee -a "$SCRIPT_LOG"
        
        # Also check if the "No valid subscription" text is gone
        if grep -q "No valid subscription" "$PROXMOXLIB" 2>/dev/null; then
            echo "[$SERVICE_NAME] But 'No valid subscription' still exists - will reapply!" | tee -a "$SCRIPT_LOG"
            rm -f "$MARKER_FILE"
        else
            echo "[$SERVICE_NAME] All patches verified - no action needed" | tee -a "$SCRIPT_LOG"
            touch "$MARKER_FILE"
            exec sleep infinity
        fi
    else
        echo "[$SERVICE_NAME] Patch not applied - will apply now" | tee -a "$SCRIPT_LOG"
        rm -f "$MARKER_FILE"
    fi
fi

echo "[$SERVICE_NAME] Waiting for PBS services to start..." | tee -a "$SCRIPT_LOG"

# Wait for PBS binaries to exist
while [ ! -f "/usr/lib/x86_64-linux-gnu/proxmox-backup/proxmox-backup-api" ] && \
      [ ! -f "/usr/lib/aarch64-linux-gnu/proxmox-backup/proxmox-backup-api" ]; do
    echo "[$SERVICE_NAME] Waiting for PBS binaries..." | tee -a "$SCRIPT_LOG"
    sleep 2
done

# Wait for PBS API to be responsive
echo "[$SERVICE_NAME] Waiting for PBS API to respond..." | tee -a "$SCRIPT_LOG"
for i in $(seq 1 30); do
    if curl -k -s https://localhost:8007/ > /dev/null 2>&1; then
        echo "[$SERVICE_NAME] PBS API is ready at attempt $i" | tee -a "$SCRIPT_LOG"
        break
    fi
    sleep 2
done

# Give it extra time to ensure everything is fully loaded
echo "[$SERVICE_NAME] Waiting 10 seconds for services to stabilize..." | tee -a "$SCRIPT_LOG"
sleep 10

# Run the actual patching script
echo "[$SERVICE_NAME] Running subscription removal script..." | tee -a "$SCRIPT_LOG"
SCRIPT_PATH="/etc/proxmox-backup-default/pbs-post-install.sh"

if [ -f "$SCRIPT_PATH" ]; then
    echo "[$SERVICE_NAME] Found script at $SCRIPT_PATH" | tee -a "$SCRIPT_LOG"
    echo "[$SERVICE_NAME] Script size: $(stat -c%s "$SCRIPT_PATH") bytes" | tee -a "$SCRIPT_LOG"
    
    # Make sure it's executable
    chmod +x "$SCRIPT_PATH"
    
    # Run the script using bash explicitly
    if /bin/bash "$SCRIPT_PATH" >> "$SCRIPT_LOG" 2>&1; then
        echo "[$SERVICE_NAME] Script completed successfully" | tee -a "$SCRIPT_LOG"
        
        # Verify the patch was actually applied
        if grep -q "NoMoreNagging" "$PROXMOXLIB" 2>/dev/null; then
            echo "[$SERVICE_NAME] ✓ Patch verified - NoMoreNagging found" | tee -a "$SCRIPT_LOG"
            touch "$MARKER_FILE"
        else
            echo "[$SERVICE_NAME] ⚠ WARNING: Script ran but patch not verified!" | tee -a "$SCRIPT_LOG"
        fi
    else
        EXIT_CODE=$?
        echo "[$SERVICE_NAME] Script failed with exit code $EXIT_CODE" | tee -a "$SCRIPT_LOG"
        echo "[$SERVICE_NAME] Last 20 lines of log:" | tee -a "$SCRIPT_LOG"
        tail -n 20 "$SCRIPT_LOG"
    fi
else
    echo "[$SERVICE_NAME] ERROR: Script not found at $SCRIPT_PATH!" | tee -a "$SCRIPT_LOG"
    echo "[$SERVICE_NAME] Checking what files exist:" | tee -a "$SCRIPT_LOG"
    ls -la /etc/proxmox-backup-default/ | tee -a "$SCRIPT_LOG"
fi

echo "[$SERVICE_NAME] Service complete, keeping alive..." | tee -a "$SCRIPT_LOG"
exec sleep infinity